node {
	/* Default to no violations. Used to specify whether no violations vs. violations
	   message is sent. */
	violations = false

	/* Cloning the Repository to jenkins-docker Workspace */
	stage('Clone repository') {
		checkout scm
	}

	stage('YAML Deployment lint') {
		sshagent(['stephane_ssh_key']) {
			sh "scp -o StrictHostKeyChecking=no good/deployment.yaml stephane@192.168.1.97:/k8s/dev/"
			try{
				sh "ssh stephane@192.168.1.97 yamllint /k8s/dev/deployment.yaml"
			}
			catch(error){
				echo "YAML syntax is incorrect"
			}
		}
	}

	stage('Validate K8s-object') {
		try {
			echo "Validate stage... Starting validate test for deployment.yaml."
			sh '/var/jenkins_home/app/cbctl k8s-object validate -f good/deployment.yaml -o json > validation_result.json'
		}
		catch (err) {
			violations = true
			echo "Build detected cbctl violations. Review Cbctl scan results."
			slackSend(channel: "#build-alerts", blocks: blocks_fail)
			slackUploadFile filePath: "validation_result.json", initialComment: ""
			echo "Violations occured. results of cbctl validate can be found in  validation_result.json"
			error("Failed Deployment due to CB Container policy violations.")
		}

		// If no CBC K8s policy violations; confirm successful build via Slack - move to deployment of validated K8s
		if(violations == false) {
			echo "No violations occured"
			sh "python3 /var/jenkins_home/app/success.py '${env.JOB_NAME}' '${env.BUILD_NUMBER}'"
		}
	}

	stage('Deployment test') {
		sshagent(['stephane_ssh_key']) {
			sh "scp -o StrictHostKeyChecking=no good/deployment.yaml stephane@192.168.1.97:/k8s/dev/"
			try{
				sh "ssh stephane@192.168.1.97 microk8s kubectl apply -f /k8s/dev/deployment.yaml && sleep 5"
			}
			catch(error){
				echo "Welp... those didnt exist yet..."
				sh "ssh stephane@192.168.1.97 microk8s kubectl create -f /k8s/dev/deployment.yaml && sleep 5"
			}
		}
	}

	stage('Connection Test') {
		sh "curl 192.168.1.97:30333"
		echo "Done testing"
	}

	stage('Cleanup') {
		sshagent(['stephane_ssh_key']) {
			sh "ssh stephane@192.168.1.97 microk8s kubectl delete deployment nodeapp"
			sh "ssh stephane@192.168.1.97 microk8s kubectl delete service nodeapp-service"
			sh "ssh stephane@192.168.1.97 microk8s kubectl get all"
		}
	}
}
